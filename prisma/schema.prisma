// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                  String       @id @default(cuid())
  email               String       @unique
  password            String
  name                String?
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  conversions         Conversion[]

  // Subscription and Payment fields
  subscriptionType    String       @default("free") // free, lifetime, monthly, yearly
  paymentStatus       String       @default("none") // none, pending, completed, failed
  paypalTransactionId String?
  paypalPayerId       String?
  mustChangePassword  Boolean      @default(false)
  paidAt              DateTime?
  isAdmin             Boolean      @default(false)

  // PayPal Subscription fields
  paypalSubscriptionId String?     @unique
  subscriptionStatus   String       @default("none") // none, active, cancelled, expired, pending
  subscriptionPlan     String?     // starter_monthly, starter_yearly, pro_monthly, pro_yearly
  subscriptionEndsAt   DateTime?
  subscriptionStartedAt DateTime?

  // Credit tracking fields
  creditsRemaining    Int          @default(0) // Current available credits
  creditsTotal        Int          @default(0) // Total credits per cycle (100, 500, or unlimited)
  creditsResetDate    DateTime?    // When credits will reset (based on billing cycle)
}

model Conversion {
  id                  String   @id @default(cuid())
  userId              String
  user                User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  originalImageUrl    String
  svgUrl              String
  originalFilename    String
  svgFilename         String
  originalFileSize    Int
  svgFileSize         Int
  originalDimensions  String
  status              String   // pending, processing, completed, failed
  errorMessage        String?
  createdAt           DateTime @default(now())

  @@index([userId])
  @@index([createdAt])
}

model ShowcaseImage {
  id              String   @id @default(cuid())
  rasterImageUrl  String
  svgUrl          String
  filename        String
  displayOrder    Int      @default(0)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([displayOrder])
}

model SiteSettings {
  id                  String   @id @default(cuid())
  // Timer Configuration
  timerEnabled        Boolean  @default(true)
  timerDurationDays   Int      @default(7) // Duration in days for the countdown
  lastResetAt         DateTime @default(now()) // When the timer was last reset

  // PayPal Subscription Plan IDs (created in PayPal)
  starterMonthlyPlanId  String?
  starterYearlyPlanId   String?
  proMonthlyPlanId      String?
  proYearlyPlanId       String?

  // Pricing Configuration (in USD)
  starterMonthlyPrice   Float    @default(10.00)
  starterYearlyPrice    Float    @default(96.00) // $8/month * 12
  proMonthlyPrice       Float    @default(19.00)
  proYearlyPrice        Float    @default(180.00) // $15/month * 12
  lifetimePrice         Float    @default(39.00)

  // Credit Limits per Plan
  starterCredits        Int      @default(100) // Credits per month for Starter plan
  proCredits            Int      @default(500) // Credits per month for Professional plan

  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}
